name: Deploy to Google Artifact Registry

on:
  push:
    branches:
      # TODO: change this eventually
      - cloud-csv-reader

jobs:
  build-and-push:
    # environment is created and variables are stored in GitHub settings for the repo
    # access variables with syntax: ${{ vars.VARIABLE_NAME }}
    environment: "Climate Cabinet"
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions. Used for OIDC connection with GitHub
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      # Needs to be run before "auth" action
      - uses: "actions/checkout@v3"

      # Use OIDC authentication to get an access token from GitHub
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          # workload_identity_provider: "projects/586636400432/locations/global/workloadIdentityPools/artifact-registry/providers/github"
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.ARTIFACT_SERVICE_ACCOUNT }}
          token_format: "access_token"

      # Login with Docker action using the token from the Google Cloud auth step
      - uses: "docker/login-action@v3"
        with:
          # registry: $${{ vars.CLOUD_REGION }}.pkg.dev
          registry: us-central1-docker.pkg.dev
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - id: "docker-push-tagged"
        name: "Tag Docker image and push to Google Artifact Registry"
        uses: "docker/build-push-action@v5"
        with:
          push: true
          # TODO: should we put context stuff in config?
          context: ./pipeline
          file: ./pipeline/Dockerfile
          tags: "us-central1-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REPOSITORY }}/${{ vars.IMAGE_TAG }}:latest"
          # climate-cabinet-398217
          # ira-pipeline
          # climate-cabinet-pipeline
