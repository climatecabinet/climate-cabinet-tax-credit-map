generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              Int             @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean
  username                   String                       @unique @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.Timestamptz(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]

  @@index([username], map: "auth_user_username_6821ab7c_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_groups {
  id         Int        @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_user_permissions {
  id              Int             @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      Int      @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model tax_credit_census_tract {
  id         String                  @id @db.VarChar(255)
  centroid   Unsupported("geometry")
  population Int

  @@index([centroid], map: "tax_credit_census_tract_centroid_45daf5ee_id", type: Gist)
  @@index([id], map: "tax_credit_census_tract_id_171d526c_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model tax_credit_geography {
  id                                                                                                    BigInt                          @id @default(autoincrement())
  name                                                                                                  String                          @db.VarChar(255)
  boundary                                                                                              Unsupported("geometry")
  as_of                                                                                                 DateTime                        @db.Date
  source                                                                                                String                          @db.VarChar(255)
  geography_type_id                                                                                     Int
  tax_credit_geography_type                                                                             tax_credit_geography_type       @relation(fields: [geography_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tax_credit_geography_geography_type_id_39643e65_fk_tax_credi")
  tax_credit_target_bonus_assoc_tax_credit_target_bonus_assoc_bonus_geography_idTotax_credit_geography  tax_credit_target_bonus_assoc[] @relation("tax_credit_target_bonus_assoc_bonus_geography_idTotax_credit_geography")
  tax_credit_target_bonus_assoc_tax_credit_target_bonus_assoc_target_geography_idTotax_credit_geography tax_credit_target_bonus_assoc[] @relation("tax_credit_target_bonus_assoc_target_geography_idTotax_credit_geography")

  @@unique([name, geography_type_id], map: "tax_credit_geography_name_geography_type_id_2fecb6f9_uniq")
  @@index([boundary], map: "tax_credit_geography_boundary_059cae64_id", type: Gist)
  @@index([geography_type_id], map: "tax_credit_geography_geography_type_id_39643e65")
}

model tax_credit_geography_type {
  id                                Int                                 @id
  name                              String                              @unique @db.VarChar(255)
  tax_credit_geography              tax_credit_geography[]
  tax_credit_geography_type_program tax_credit_geography_type_program[]

  @@index([name], map: "tax_credit_geography_type_name_d3148d69_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model tax_credit_geography_type_program {
  id                        Int                       @id
  amount_description        String
  geography_type_id         Int
  program_id                Int
  tax_credit_geography_type tax_credit_geography_type @relation(fields: [geography_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tax_credit_geography_geography_type_id_9c1262d4_fk_tax_credi")
  tax_credit_program        tax_credit_program        @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tax_credit_geography_program_id_b563a4bb_fk_tax_credi")

  @@unique([geography_type_id, program_id], map: "tax_credit_geography_typ_geography_type_id_progra_b6318e73_uniq")
  @@index([geography_type_id], map: "tax_credit_geography_type_program_geography_type_id_9c1262d4")
  @@index([program_id], map: "tax_credit_geography_type_program_program_id_b563a4bb")
}

model tax_credit_program {
  id                                Int                                 @id
  name                              String                              @unique @db.VarChar(255)
  agency                            String                              @db.VarChar(255)
  description                       String
  base_benefit                      String
  tax_credit_geography_type_program tax_credit_geography_type_program[]

  @@index([name], map: "tax_credit_program_name_7cc8c339_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model tax_credit_target_bonus_assoc {
  id                                                                                           Int                  @id @default(autoincrement())
  target_geography_type                                                                        String               @db.VarChar(255)
  bonus_geography_type                                                                         String               @db.VarChar(255)
  bonus_geography_id                                                                           BigInt
  target_geography_id                                                                          BigInt
  tax_credit_geography_tax_credit_target_bonus_assoc_bonus_geography_idTotax_credit_geography  tax_credit_geography @relation("tax_credit_target_bonus_assoc_bonus_geography_idTotax_credit_geography", fields: [bonus_geography_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tax_credit_target_bo_bonus_geography_id_dd2660aa_fk_tax_credi")
  tax_credit_geography_tax_credit_target_bonus_assoc_target_geography_idTotax_credit_geography tax_credit_geography @relation("tax_credit_target_bonus_assoc_target_geography_idTotax_credit_geography", fields: [target_geography_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tax_credit_target_bo_target_geography_id_dd8cf942_fk_tax_credi")

  @@unique([target_geography_id, bonus_geography_id], map: "tax_credit_target_bonus__target_geography_id_bonu_dc0d34e0_uniq")
  @@index([bonus_geography_id], map: "tax_credit_target_bonus_assoc_bonus_geography_id_dd2660aa")
  @@index([target_geography_id], map: "tax_credit_target_bonus_assoc_target_geography_id_dd8cf942")
}
